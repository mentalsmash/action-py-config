name: 'Dynamic Workflow Configuration with Python'
description: |
  Clone the repository, and invoke a Python function to generate
  dynamic configuration settings for a workflow.
inputs:
  github:
    description: |
      A JSON serialization of the `github` context.
    required: true
  inputs:
    description: |
      A JSON serialization of the `inputs` context.
  workflow:
    description: |
      Optionally, load configuration for the specified workflow.
  clone-dir:
    description: |
      Directory where the repository will be cloned, if not already existing.
    default: src/repo
  clone-repo:
    description: |
      Whether to clone the repository or not. Set to empty to disable.
    default: yes
  config-dir:
    description: |
      Directory where the repository's pyconfig is located.
      Relative to clone_dir.
    default: .workflow-pyconfig
  settings:
    description: |
      Path to the project's YAML settings file. Relative to clone_dir.
    default: .workflow-pyconfig/settings.yml
  outputs:
    description: |
      A newline-separated list of output variables.

      Each line should be in the form: `VAR=<context>.<selector>`.

      The context can be one of:
      - `cfg` (the loaded configuration object)
      - `env`
      - `github`
      - `inputs`
    required: true
runs:
  using: "composite"
  steps:
    - name: Clone source repository
      uses: actions/checkout@v4
      if: ${{ inputs.clone-repo }}
      with:
        path: ${{ inputs.clone-dir }}
        submodules: true

    - name: Generate workflow configuration
      id: config
      shell: python
      run: |
        import sys
        import os
        sys.path.insert(0, os.environ["GITHUB_ACTION_PATH"])

        from workflow_py_config import action

        action(
          github="""${{ inputs.github }}""",
          inputs="""${{ inputs.inputs }}""",
          outputs="""${{ inputs.outputs }}""",
          clone_dir="${{ inputs.clone-dir }}",
          config_dir="${{ inputs.config-dir }}",
          settings="${{ inputs.settings }}",
          workflow="${{ inputs.workflow }}")
